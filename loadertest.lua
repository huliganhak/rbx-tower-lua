local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")

local player = Players.LocalPlayer
local loopRunning = false
local selectedWorld = nil

-- ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡∏™‡∏£‡πâ‡∏≤‡∏á ScreenGui ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ
local screenGui = player:WaitForChild("PlayerGui"):FindFirstChild("TeleportUI")
if not screenGui then
	screenGui = Instance.new("ScreenGui")
	screenGui.Name = "TeleportUI"
	screenGui.Parent = player:WaitForChild("PlayerGui")
end

-- ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏Ç‡∏≠‡∏á‡πÅ‡∏ï‡πà‡∏•‡∏∞ World
local locationPresets = {
	World1 = { start = Vector3.new(-3.75, 5, -55), stairs = Vector3.new(-3.75, 5, -60), trophy = Vector3.new(-5, 14410, -65), down = Vector3.new(-3.75, 5, -55) },
	World2 = { start = Vector3.new(5000, 5, -60), stairs = Vector3.new(5000, 5, -65), trophy = Vector3.new(5000, 14410, -70), down = Vector3.new(5000, 5, -60) },
	World3 = { start = Vector3.new(10001, 5, -30), stairs = Vector3.new(10001, 5, -35), trophy = Vector3.new(10001, 14410, -40), down = Vector3.new(10001, 5, -30) },
	World4 = { start = Vector3.new(14998, 5, -130), stairs = Vector3.new(14998, 5, -135), trophy = Vector3.new(14998, 14410, -145), down = Vector3.new(14998, 5, -130) },
	World5 = { start = Vector3.new(20001, 5, -70), stairs = Vector3.new(20001, 5, -75), trophy = Vector3.new(20001, 14410, -80), down = Vector3.new(20001, 5, -70) },
	World6 = { start = Vector3.new(25000, 5, -35), stairs = Vector3.new(25000, 5, -40), trophy = Vector3.new(25000, 14410, -45), down = Vector3.new(25000, 5, -35) },
	World7 = { start = Vector3.new(30000, 5, -70), stairs = Vector3.new(30000, 5, -75), trophy = Vector3.new(30000, 14410, -85), down = Vector3.new(30000, 5, -70) },
	World8 = { start = Vector3.new(35000, 5, -35), stairs = Vector3.new(35000, 5, -40), trophy = Vector3.new(35000, 14410, -45), down = Vector3.new(35000, 5, -35) }
}

-- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏î‡∏∂‡∏á‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ï‡∏≤‡∏° world ‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
local function getLocation()
	if not selectedWorld then return nil end
	return locationPresets[selectedWorld]
end

-- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ä‡πà‡∏ß‡∏¢‡∏™‡∏£‡πâ‡∏≤‡∏á UI element ‡πÅ‡∏ö‡∏ö‡∏á‡πà‡∏≤‡∏¢
local function createButton(parent, text, position, size)
	local btn = Instance.new("TextButton")
	btn.Text = text
	btn.Position = position
	btn.Size = size
	btn.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
	btn.TextColor3 = Color3.new(1, 1, 1)
	btn.Parent = parent
	return btn
end

local function createTextBox(parent, placeholder, position, size, editable)
	local box = Instance.new("TextBox")
	box.PlaceholderText = placeholder or ""
	box.Position = position
	box.Size = size
	box.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
	box.TextColor3 = Color3.new(1, 1, 1)
	box.ClearTextOnFocus = false
	box.TextEditable = editable ~= false -- default true
	box.TextWrapped = true
	box.Parent = parent
	return box
end

-- ‡∏™‡∏£‡πâ‡∏≤‡∏á UI ‡∏´‡∏•‡∏±‡∏Å
local frame = Instance.new("Frame", screenGui)
frame.Position = UDim2.new(0.3, 0, 0.3, 0)
frame.Size = UDim2.new(0, 300, 0, 280)
frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
frame.Visible = true
frame.Active = true
frame.Draggable = false -- ‡πÄ‡∏£‡∏≤‡∏à‡∏∞‡∏ó‡∏≥ drag ‡πÄ‡∏≠‡∏á

-- TextBox ‡πÉ‡∏™‡πà‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡∏≠‡∏ö
local roundsBox = createTextBox(frame, "‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡∏≠‡∏ö", UDim2.new(0.1, 0, 0.12, 0), UDim2.new(0.8, 0, 0.15, 0), true)
roundsBox.Text = ""

-- ‡∏õ‡∏∏‡πà‡∏° ‡πÄ‡∏£‡∏¥‡πà‡∏° ‡∏Å‡∏±‡∏ö ‡∏´‡∏¢‡∏∏‡∏î
local startButton = createButton(frame, "‡πÄ‡∏£‡∏¥‡πà‡∏°", UDim2.new(0.1, 0, 0.35, 0), UDim2.new(0.35, 0, 0.15, 0))
local stopButton = createButton(frame, "‡∏´‡∏¢‡∏∏‡∏î", UDim2.new(0.55, 0, 0.35, 0), UDim2.new(0.35, 0, 0.15, 0))

-- ‡∏õ‡∏∏‡πà‡∏° Dropdown ‡∏´‡∏•‡∏±‡∏Å
local dropdownMain = createButton(frame, "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å World", UDim2.new(0.1, 0, 0.65, 0), UDim2.new(0.8, 0, 0.15, 0))
dropdownMain.BackgroundColor3 = Color3.fromRGB(70, 70, 70)

-- ‡∏Å‡∏£‡∏≠‡∏ö dropdown ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ (‡∏ã‡πà‡∏≠‡∏ô‡∏ï‡∏≠‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°)
local dropdownFrame = Instance.new("Frame", frame)
dropdownFrame.Position = UDim2.new(0.1, 0, 0.8, 0)
dropdownFrame.Size = UDim2.new(0.8, 0, 0, 0)
dropdownFrame.ClipsDescendants = true
dropdownFrame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
dropdownFrame.BorderSizePixel = 1
dropdownFrame.Visible = false

local layout = Instance.new("UIListLayout", dropdownFrame)
layout.Padding = UDim.new(0, 4)
layout.SortOrder = Enum.SortOrder.LayoutOrder

-- ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏•‡∏∑‡∏≠‡∏Å World ‡πÉ‡∏ô dropdown
for name, _ in pairs(locationPresets) do
	local option = createButton(dropdownFrame, name, UDim2.new(0, 0, 0, 0), UDim2.new(1, 0, 0, 24))
	option.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
	option.Size = UDim2.new(1, 0, 0, 24)
	option.MouseButton1Click:Connect(function()
		selectedWorld = name
		dropdownMain.Text = selectedWorld
		dropdownFrame.Visible = false
		dropdownFrame.Size = UDim2.new(0.8, 0, 0, 0)
	end)
end

-- ‡∏Å‡∏•‡πà‡∏≠‡∏á‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
local detailBox = createTextBox(frame, nil, UDim2.new(0.05, 0, 0.05, 0), UDim2.new(0.9, 0, 0.1, 0), false)
detailBox.Text = "‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞..."
detailBox.BackgroundColor3 = Color3.fromRGB(40, 40, 40)

local function updateStatus(msg)
	detailBox.Text = msg
end

-- Toggle ‡πÄ‡∏õ‡∏¥‡∏î-‡∏õ‡∏¥‡∏î dropdown
local isOpen = false
dropdownMain.MouseButton1Click:Connect(function()
	isOpen = not isOpen
	dropdownFrame.Visible = isOpen
	if isOpen then
		dropdownFrame.Size = UDim2.new(0.8, 0, 0, 200)
	else
		dropdownFrame.Size = UDim2.new(0.8, 0, 0, 0)
	end
end)

-- Toggle ‡πÅ‡∏™‡∏î‡∏á UI ‡∏î‡πâ‡∏ß‡∏¢‡∏õ‡∏∏‡πà‡∏° P
UserInputService.InputBegan:Connect(function(input, gameProcessed)
	if input.KeyCode == Enum.KeyCode.P and not gameProcessed then
		frame.Visible = not frame.Visible
	end
end)

-- Drag UI (‡∏ó‡∏≥‡πÄ‡∏≠‡∏á‡πÉ‡∏´‡πâ‡∏•‡∏∑‡πà‡∏ô)
local dragging, dragInput, dragStart, startPos = false, nil, nil, nil

frame.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 then
		dragging = true
		dragStart = input.Position
		startPos = frame.Position

		input.Changed:Connect(function()
			if input.UserInputState == Enum.UserInputState.End then
				dragging = false
			end
		end)
	end
end)

frame.InputChanged:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseMovement then
		dragInput = input
	end
end)

UserInputService.InputChanged:Connect(function(input)
	if input == dragInput and dragging then
		local delta = input.Position - dragStart
		frame.Position = UDim2.new(
			startPos.X.Scale, startPos.X.Offset + delta.X,
			startPos.Y.Scale, startPos.Y.Offset + delta.Y
		)
	end
end)

-- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô Teleport ‡πÅ‡∏•‡∏∞ Move

local function teleportTo(position)
	local character = player.Character or player.CharacterAdded:Wait()
	local hrp = character:WaitForChild("HumanoidRootPart")
	hrp.CFrame = CFrame.new(position)
end

local function walkTo(position)
	local character = player.Character or player.CharacterAdded:Wait()
	local humanoid = character:WaitForChild("Humanoid")
	humanoid:MoveTo(position)
end

local function walkUp(duration)
	local character = player.Character or player.CharacterAdded:Wait()
	local humanoid = character:FindFirstChild("Humanoid")
	if not humanoid then return end
	
	local startTime = tick()
	RunService:UnbindFromRenderStep("WalkUpMove")
	RunService:BindToRenderStep("WalkUpMove", Enum.RenderPriority.Character.Value + 1, function()
		if tick() - startTime > duration or not loopRunning then
			RunService:UnbindFromRenderStep("WalkUpMove")
			return
		end
		if humanoid then
			humanoid:Move(Vector3.new(0, 0, -1), true)
		end
	end)
end

-- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô teleport/walk ‡∏ï‡∏≤‡∏°‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ó‡∏µ‡πà‡∏ï‡∏±‡πâ‡∏á‡πÑ‡∏ß‡πâ‡πÉ‡∏ô locationPresets

local function TpPosStart()
	local loc = getLocation()
	if not loc then return end
	teleportTo(loc.start)
end

local function WalkToStairs()
	local loc = getLocation()
	if not loc then return end
	walkTo(loc.stairs)
end

local function WalkUp()
	walkUp(3)
end

local function TpPosTrophy()
	local loc = getLocation()
	if not loc then return end
	teleportTo(loc.trophy)
end

local function WalkDown()
	local loc = getLocation()
	if not loc then return end
	walkTo(loc.down)
end

-- ‡∏•‡∏π‡∏õ‡∏£‡∏±‡∏ô teleport/walk ‡∏ï‡∏≤‡∏°‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡∏≠‡∏ö
local function RunLoop(rounds)
	loopRunning = true
	for i = 1, rounds do
		if not loopRunning then break end

		TpPosStart()
		task.wait(1)

		WalkToStairs()
		task.wait(1)

		WalkUp()
		task.wait(3)

		TpPosTrophy()
		task.wait(1)

		WalkDown()
		task.wait(5)
	end
	loopRunning = false
end

-- Event ‡∏õ‡∏∏‡πà‡∏° ‡πÄ‡∏£‡∏¥‡πà‡∏°
startButton.MouseButton1Click:Connect(function()
	local rounds = tonumber(roundsBox.Text)
	if not selectedWorld then
		updateStatus("‚ö†Ô∏è ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å World ‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°")
		return
	end

	if rounds and rounds > 0 then
		if not loopRunning then
			task.spawn(function()
				updateStatus("‚úÖ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏£‡∏≠‡∏ö‡πÉ‡∏ô " .. selectedWorld)
				RunLoop(rounds)
				updateStatus("‚èπÔ∏è ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô")
			end)
		end
	else
		updateStatus("‚ùå ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡∏≠‡∏ö‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á")
	end
end)

-- Event ‡∏õ‡∏∏‡πà‡∏° ‡∏´‡∏¢‡∏∏‡∏î
stopButton.MouseButton1Click:Connect(function()
	loopRunning = false
	updateStatus("‚èπÔ∏è ‡∏´‡∏¢‡∏∏‡∏î‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß")
end)

function HatchEgg()
	local args = {
		7000020,
		3
	}
	game:GetService("ReplicatedStorage"):WaitForChild("Tool"):WaitForChild("DrawUp"):WaitForChild("Msg"):WaitForChild("DrawHero"):InvokeServer(unpack(args))
end

-- ‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏õ‡∏¥‡∏î/‡∏õ‡∏¥‡∏î‡∏õ‡∏∏‡πà‡∏° Hatch
local toggleHatchButton = createButton(frame, "üîΩ Hatch Egg", UDim2.new(0.1, 0, 0.52, 0), UDim2.new(0.8, 0, 0.1, 0))
toggleHatchButton.BackgroundColor3 = Color3.fromRGB(80, 60, 60)

-- ‡∏õ‡∏∏‡πà‡∏° Hatch Egg (‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏õ‡∏¥‡∏î)
local hatchButton = createButton(frame, "ü•ö Hatch Egg", UDim2.new(0.1, 0, 0.63, 0), UDim2.new(0.8, 0, 0.1, 0))
hatchButton.BackgroundColor3 = Color3.fromRGB(100, 100, 80)
hatchButton.Visible = false

-- Toggle ‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏õ‡∏∏‡πà‡∏° hatch
toggleHatchButton.MouseButton1Click:Connect(function()
	hatchButton.Visible = not hatchButton.Visible
	toggleHatchButton.Text = hatchButton.Visible and "üîº Hide Hatch" or "üîΩ Hatch Egg"
end)

-- ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏° hatch
hatchButton.MouseButton1Click:Connect(function()
	HatchEgg()
	updateStatus("‚úÖ ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô Hatch Egg ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")
end)

